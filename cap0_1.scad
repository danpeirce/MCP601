// Generated by SolidPython 1.0.2 on 2020-10-12 00:09:06


union() {
	hull() {
		hull() {
			translate(v = [1.9050000000, 1.2700000000, 3.3900000000]) {
				scale(v = [1.5000000000, 1, 0.5000000000]) {
					sphere($fn = 50, d = 2.5400000000);
				}
			}
			translate(v = [1.9050000000, 1.2700000000, 1.5200000000]) {
				scale(v = [1.5000000000, 1, 0.5000000000]) {
					sphere($fn = 50, d = 2.5400000000);
				}
			}
		}
		translate(v = [0.6350000000, 1.2700000000, 0.5061600000]) {
			cylinder($fn = 50, h = 0.2550000000, r = 0.3810000000);
		}
	}
	hull() {
		hull() {
			translate(v = [1.9050000000, 1.2700000000, 3.3900000000]) {
				scale(v = [1.5000000000, 1, 0.5000000000]) {
					sphere($fn = 50, d = 2.5400000000);
				}
			}
			translate(v = [1.9050000000, 1.2700000000, 1.5200000000]) {
				scale(v = [1.5000000000, 1, 0.5000000000]) {
					sphere($fn = 50, d = 2.5400000000);
				}
			}
		}
		translate(v = [3.1750000000, 1.2700000000, 0.5061600000]) {
			cylinder($fn = 50, h = 0.2550000000, r = 0.3810000000);
		}
	}
	translate(v = [0.6350000000, 1.2700000000, 0]) {
		cylinder($fn = 50, h = 1.5200000000, r1 = 0.2550000000, r2 = 0.6350000000);
	}
	translate(v = [3.1750000000, 1.2700000000, 0]) {
		cylinder($fn = 50, h = 1.5200000000, r1 = 0.2550000000, r2 = 0.6350000000);
	}
}
/***********************************************
*********      SolidPython code:      **********
************************************************
 
# C315C104M5U5TA7301  0.1 ÂµF capacitor
# fits in     cube([3.81, 2.54, 3.14 + 1.52])
import sys
from math import cos, radians, sin

from euclid3 import Point3

from solid import *
from solid.utils import extrude_along_path



if __name__ == '__main__':
    SEGMENTS = 50
    inch = 25.4
    rad = 0.51/2
    boxx = 3.81
    boxy = 2.54
    boxz_3 = 3.14+1.52-boxy/2
    boxz_2 = 1.52 
    lead_offset1 = (boxx - inch*0.1)/2
    
    a0 = translate([boxx/2, boxy/2, boxz_3])(scale([boxx/boxy, 1, 1/2] )(sphere(d=boxy, segments = 50)))
    a2 = translate([boxx/2, boxy/2, boxz_2])(scale([boxx/boxy, 1, 1/2] )(sphere(d=boxy, segments = 50)))
    a3 = hull()(a0,a2)
    c3 = translate([lead_offset1, boxy/2, 0.333*boxz_2])(cylinder(r=lead_offset1*0.6, h=rad, segments = 50))
    c4 = translate([lead_offset1+0.1*inch, boxy/2, 0.333*boxz_2])(cylinder(r=lead_offset1*0.6, h=rad, segments = 50))
    a4 = hull()(a3,c3)
    a5 = hull()(a3,c4)
    c1 = translate([lead_offset1, boxy/2, 0])(cylinder(r1=rad, r2=lead_offset1, h=boxz_2, segments = 50))
    c2 = translate([lead_offset1+0.1*inch, boxy/2, 0])(cylinder(r1=rad, r2=lead_offset1, h=boxz_2, segments = 50))
    a1 = a4+a5+c1+c2

    file_out = scad_render_to_file(a1, "cap0_1.scad", include_orig_code=True)

	 
 
************************************************/
